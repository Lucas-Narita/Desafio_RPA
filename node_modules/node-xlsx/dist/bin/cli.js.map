{"version":3,"sources":["../../src/bin/cli.ts"],"sourcesContent":["#! /usr/bin/env node\nimport { writeFile } from \"node:fs/promises\";\nimport { build } from \"src/index\";\n\nconst [action = \"build\", ...args] = process.argv.slice(2);\n\nconst readStdin = async (bufferSize?: number): Promise<Buffer> => {\n  return new Promise((resolve) => {\n    const buffers: Buffer[] = [];\n    process.stdin.on(\"readable\", () => {\n      const read = process.stdin.read();\n      if (read) {\n        buffers.push(read);\n      }\n    });\n    process.stdin.on(\"end\", () => {\n      resolve(Buffer.concat(buffers, bufferSize));\n    });\n  });\n};\n\nconst main = async () => {\n  switch (action) {\n    case \"build\": {\n      const stdin = JSON.parse((await readStdin()).toString(\"utf8\"));\n      const result = build(stdin);\n      await writeFile(args[0] || `${process.cwd()}/out.xlsx`, result);\n      break;\n    }\n    default:\n      console.log(\"Sorry, that is not something I know how to do.\");\n  }\n  process.exit(0);\n};\n\nmain();\n"],"mappings":";;;;;;AACA,SAAS,iBAAiB;AAG1B,IAAM,CAAC,SAAS,SAAS,GAAG,IAAI,IAAI,QAAQ,KAAK,MAAM,CAAC;AAExD,IAAM,YAAY,OAAO,eAAyC;AAChE,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,UAAM,UAAoB,CAAC;AAC3B,YAAQ,MAAM,GAAG,YAAY,MAAM;AACjC,YAAM,OAAO,QAAQ,MAAM,KAAK;AAChC,UAAI,MAAM;AACR,gBAAQ,KAAK,IAAI;AAAA,MACnB;AAAA,IACF,CAAC;AACD,YAAQ,MAAM,GAAG,OAAO,MAAM;AAC5B,cAAQ,OAAO,OAAO,SAAS,UAAU,CAAC;AAAA,IAC5C,CAAC;AAAA,EACH,CAAC;AACH;AAEA,IAAM,OAAO,YAAY;AACvB,UAAQ,QAAQ;AAAA,IACd,KAAK,SAAS;AACZ,YAAM,QAAQ,KAAK,OAAO,MAAM,UAAU,GAAG,SAAS,MAAM,CAAC;AAC7D,YAAM,SAAS,MAAM,KAAK;AAC1B,YAAM,UAAU,KAAK,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,aAAa,MAAM;AAC9D;AAAA,IACF;AAAA,IACA;AACE,cAAQ,IAAI,gDAAgD;AAAA,EAChE;AACA,UAAQ,KAAK,CAAC;AAChB;AAEA,KAAK;","names":[]}